// Code generated by protoc-gen-go. DO NOT EDIT.
// source: file.proto

package dumper

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SaveDumpFileRequest struct {
	Targetname string `protobuf:"bytes,1,opt,name=Targetname" json:"Targetname,omitempty"`
	Data       []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *SaveDumpFileRequest) Reset()                    { *m = SaveDumpFileRequest{} }
func (m *SaveDumpFileRequest) String() string            { return proto.CompactTextString(m) }
func (*SaveDumpFileRequest) ProtoMessage()               {}
func (*SaveDumpFileRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *SaveDumpFileRequest) GetTargetname() string {
	if m != nil {
		return m.Targetname
	}
	return ""
}

func (m *SaveDumpFileRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type SaveDumpFileResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *SaveDumpFileResponse) Reset()                    { *m = SaveDumpFileResponse{} }
func (m *SaveDumpFileResponse) String() string            { return proto.CompactTextString(m) }
func (*SaveDumpFileResponse) ProtoMessage()               {}
func (*SaveDumpFileResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *SaveDumpFileResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*SaveDumpFileRequest)(nil), "dumper.SaveDumpFileRequest")
	proto.RegisterType((*SaveDumpFileResponse)(nil), "dumper.SaveDumpFileResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for FileService service

type FileServiceClient interface {
	SaveDumpFile(ctx context.Context, in *SaveDumpFileRequest, opts ...grpc.CallOption) (*SaveDumpFileResponse, error)
}

type fileServiceClient struct {
	cc *grpc.ClientConn
}

func NewFileServiceClient(cc *grpc.ClientConn) FileServiceClient {
	return &fileServiceClient{cc}
}

func (c *fileServiceClient) SaveDumpFile(ctx context.Context, in *SaveDumpFileRequest, opts ...grpc.CallOption) (*SaveDumpFileResponse, error) {
	out := new(SaveDumpFileResponse)
	err := grpc.Invoke(ctx, "/dumper.FileService/SaveDumpFile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for FileService service

type FileServiceServer interface {
	SaveDumpFile(context.Context, *SaveDumpFileRequest) (*SaveDumpFileResponse, error)
}

func RegisterFileServiceServer(s *grpc.Server, srv FileServiceServer) {
	s.RegisterService(&_FileService_serviceDesc, srv)
}

func _FileService_SaveDumpFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveDumpFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).SaveDumpFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dumper.FileService/SaveDumpFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).SaveDumpFile(ctx, req.(*SaveDumpFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FileService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dumper.FileService",
	HandlerType: (*FileServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SaveDumpFile",
			Handler:    _FileService_SaveDumpFile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "file.proto",
}

func init() { proto.RegisterFile("file.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 177 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0xcb, 0xcc, 0x49,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4b, 0x29, 0xcd, 0x2d, 0x48, 0x2d, 0x52, 0xf2,
	0xe4, 0x12, 0x0e, 0x4e, 0x2c, 0x4b, 0x75, 0x29, 0xcd, 0x2d, 0x70, 0xcb, 0xcc, 0x49, 0x0d, 0x4a,
	0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x92, 0xe3, 0xe2, 0x0a, 0x49, 0x2c, 0x4a, 0x4f, 0x2d, 0xc9,
	0x4b, 0xcc, 0x4d, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x42, 0x12, 0x11, 0x12, 0xe2, 0x62,
	0x49, 0x49, 0x2c, 0x49, 0x94, 0x60, 0x52, 0x60, 0xd4, 0xe0, 0x09, 0x02, 0xb3, 0x95, 0x0c, 0xb8,
	0x44, 0x50, 0x8d, 0x2a, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x15, 0x92, 0xe0, 0x62, 0x2f, 0x2e, 0x4d,
	0x4e, 0x4e, 0x2d, 0x2e, 0x06, 0x1b, 0xc4, 0x11, 0x04, 0xe3, 0x1a, 0x45, 0x71, 0x71, 0x83, 0x54,
	0x06, 0xa7, 0x16, 0x95, 0x65, 0x26, 0xa7, 0x0a, 0x79, 0x73, 0xf1, 0x20, 0x1b, 0x20, 0x24, 0xad,
	0x07, 0x71, 0xa4, 0x1e, 0x16, 0x17, 0x4a, 0xc9, 0x60, 0x97, 0x84, 0xd8, 0xa9, 0xc4, 0x90, 0xc4,
	0x06, 0xf6, 0xa7, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x74, 0x6b, 0xf7, 0x8d, 0xf5, 0x00, 0x00,
	0x00,
}
