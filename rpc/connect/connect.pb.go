// Code generated by protoc-gen-go. DO NOT EDIT.
// source: connect.proto

/*
Package connect is a generated protocol buffer package.

It is generated from these files:
	connect.proto

It has these top-level messages:
	ConnectRequest
	ConnectResponse
*/
package connect

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ConnectRequest struct {
	Type string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
}

func (m *ConnectRequest) Reset()                    { *m = ConnectRequest{} }
func (m *ConnectRequest) String() string            { return proto.CompactTextString(m) }
func (*ConnectRequest) ProtoMessage()               {}
func (*ConnectRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ConnectRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type ConnectResponse struct {
	Success bool `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
}

func (m *ConnectResponse) Reset()                    { *m = ConnectResponse{} }
func (m *ConnectResponse) String() string            { return proto.CompactTextString(m) }
func (*ConnectResponse) ProtoMessage()               {}
func (*ConnectResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ConnectResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*ConnectRequest)(nil), "connect.ConnectRequest")
	proto.RegisterType((*ConnectResponse)(nil), "connect.ConnectResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AgentConnect service

type AgentConnectClient interface {
	ConnectAgent(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (*ConnectResponse, error)
}

type agentConnectClient struct {
	cc *grpc.ClientConn
}

func NewAgentConnectClient(cc *grpc.ClientConn) AgentConnectClient {
	return &agentConnectClient{cc}
}

func (c *agentConnectClient) ConnectAgent(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (*ConnectResponse, error) {
	out := new(ConnectResponse)
	err := grpc.Invoke(ctx, "/connect.AgentConnect/ConnectAgent", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AgentConnect service

type AgentConnectServer interface {
	ConnectAgent(context.Context, *ConnectRequest) (*ConnectResponse, error)
}

func RegisterAgentConnectServer(s *grpc.Server, srv AgentConnectServer) {
	s.RegisterService(&_AgentConnect_serviceDesc, srv)
}

func _AgentConnect_ConnectAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentConnectServer).ConnectAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connect.AgentConnect/ConnectAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentConnectServer).ConnectAgent(ctx, req.(*ConnectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AgentConnect_serviceDesc = grpc.ServiceDesc{
	ServiceName: "connect.AgentConnect",
	HandlerType: (*AgentConnectServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ConnectAgent",
			Handler:    _AgentConnect_ConnectAgent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "connect.proto",
}

func init() { proto.RegisterFile("connect.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 145 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0xce, 0xcf, 0xcb,
	0x4b, 0x4d, 0x2e, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x72, 0x95, 0x54, 0xb8,
	0xf8, 0x9c, 0x21, 0xcc, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x21, 0x2e, 0x96, 0x92,
	0xca, 0x82, 0x54, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x30, 0x5b, 0x49, 0x9b, 0x8b, 0x1f,
	0xae, 0xaa, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x55, 0x48, 0x82, 0x8b, 0xbd, 0xb8, 0x34, 0x39, 0x39,
	0xb5, 0xb8, 0x58, 0x82, 0x49, 0x81, 0x51, 0x83, 0x23, 0x08, 0xc6, 0x35, 0x0a, 0xe6, 0xe2, 0x71,
	0x4c, 0x4f, 0xcd, 0x2b, 0x81, 0xea, 0x10, 0x72, 0xe6, 0xe2, 0x81, 0x32, 0xc1, 0xc2, 0x42, 0xe2,
	0x7a, 0x30, 0xb7, 0xa0, 0xda, 0x2c, 0x25, 0x81, 0x29, 0x01, 0xb1, 0x4c, 0x89, 0x21, 0x89, 0x0d,
	0xec, 0x6e, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xaa, 0xf6, 0x55, 0xe1, 0xc8, 0x00, 0x00,
	0x00,
}
